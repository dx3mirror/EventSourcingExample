// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaymentService.Infrastructures.Contexts;

#nullable disable

namespace PaymentService.Hosts.Migrations.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PaymentService.Infrastructures.Contexts.StoreEntity.PaymentStore", b =>
                {
                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("json")
                        .HasDefaultValue("{}");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("text");

                    b.HasKey("AggregateId", "Version");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.HasIndex("AggregateId", "Version");

                    b.ToTable("PaymentStore", null, t =>
                        {
                            t.HasCheckConstraint("CK_PaymentStore_Version_NonNegative", "\"Version\" >= 0");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
